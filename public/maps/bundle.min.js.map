{"version":3,"sources":["bundle.js"],"names":["angular","module","service","$http","CONFIG","this","url","API_URL","currentUser","getAll","callback","get","then","getUser","id","setCurrentUser","user","getCurrentUser","controller","$scope","UsersService","$location","users","response","data","results","userDetail","path","$routeParams","console","info","handleError","res","warn","error","noblock","$rootScope","AUTH_EVENTS","Session","expandedMenu","logout","$broadcast","toogleMenu","$","AdminLTE","pushMenu","expand","collapse","HomeService","token","_createLc","window","localStorage","setItem","toJson","_destroyLc","removeItem","create","destroy","getToken","fromJson","getItem","isAuthenticated","factory","$q","request","config","headers","Authorization","responseError","log",401,"notAuthenticated",403,"notAuthorized","status","reject","requestToken","post","login","method","Content-Type","LoginService","busy","successLogin","errorLogin","errors","non_field_errors","run","editableOptions","editableThemes","theme","submitTpl","cancelTpl","$on","event","next","goTo","$routeProvider","$locationProvider","when","templateUrl","otherwise","redirectTo","html5Mode","constant","ROOT_UR","$httpProvider","interceptors","push","$injector"],"mappings":"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","file":"bundle.min.js","sourcesContent":["\nangular.module('app.users', [])\n\n.service('UsersService', ['$http', 'CONFIG', function($http,  CONFIG){\n    this.url = CONFIG.API_URL+'users/';\n    this.currentUser = null; \n\n    this.getAll = function(callback){\n      return $http.get(this.url).then(callback);\n    };\n\n    this.getUser = function(id, callback){\n      return $http.get(this.url+id+'/').then(callback);\n    };\n\n    this.setCurrentUser = function(user){\n      this.currentUser = user;\n    };\n\n    this.getCurrentUser = function(){\n      return this.currentUser;\n    };\n}]);\n\n\nangular.module('app.users')\n\n.controller('UsersCtrl', ['$scope', 'UsersService', '$location', \n  function($scope, UsersService, $location) {\n\n    $scope.users = [];\n\n    UsersService.getAll(function(response){\n      $scope.users = response.data.results; \n    });\n\n    $scope.userDetail = function(user){\n      UsersService.setCurrentUser(user);\n      $location.path('/usuarios/'+user.id);\n    };\n\n}]);\n\nangular.module('app.users')\n\n.controller('UserDetailCtrl', ['$scope', 'UsersService', '$routeParams', \n  function($scope, UsersService, $routeParams) {\n\n    $scope.user = UsersService.getCurrentUser();\n\n    if(!$scope.user){\n      UsersService.getUser($routeParams.id, function(response){\n        $scope.user = response.data; \n      });\n    }\n\n}]);\n\n\nangular.module('app.users')\n\n.controller('ProfileCtrl', ['$scope', 'UsersService', function($scope, UsersService) {\n\n  console.info(\"profile Ctrl works\");\n\n}]);\n\n\nangular.module('app.home', [])\n\n.service('HomeService', ['$http', 'CONFIG', function($http,  CONFIG){\n    var url = CONFIG.API_URL+'home/';\n\n    this.handleError = function(res){\n      console.warn(res);\n    };\n\n    this.get = function(callback, error, noblock){\n      return $http.get(url).then(callback, error);\n    };\n}]);\n\nangular.module('app.home')\n\n.controller('MainCtrl', ['$scope', '$rootScope', 'AUTH_EVENTS', 'Session',\n  function($scope, $rootScope, AUTH_EVENTS, Session) {\n    console.warn('main ctrl');\n\n    $scope.user = null;\n    $scope.expandedMenu = true;\n\n\n    $scope.setCurrentUser = function(user){\n      $scope.user = user; \n    };\n\n    $scope.logout = function(user){\n      $rootScope.$broadcast(AUTH_EVENTS.logout);\n    };\n\n    $scope.toogleMenu = function(){\n      $scope.expandedMenu = !$scope.expandedMenu;\n\n      if ($scope.expandedMenu){\n        $.AdminLTE.pushMenu.expand()\n      } else {\n        $.AdminLTE.pushMenu.collapse();\n      }\n    }\n\n    //init\n    $scope.setCurrentUser(Session.getUser());\n}]);\n\n\nangular.module('app.home')\n\n.controller('HomeCtrl', ['$scope', 'HomeService', function($scope, HomeService) {\n\n  console.info(\"home Ctrl works\");\n\n}]);\n\nangular.module('app.auth', [])\n\n.service('Session', [function(){\n\n  this.token = null;\n  this.user = null;\n\n  //create session from local storage\n  this._createLc = function (token, user) {\n    window.localStorage.setItem('token', angular.toJson(token));\n    window.localStorage.setItem('user', angular.toJson(user));\n  };\n\n //destroy session from local storage \n  this._destroyLc = function () {\n    window.localStorage.removeItem('token');\n    window.localStorage.removeItem('user');\n  };\n\n  //create session from memory \n  this.create = function (token, user) {\n    this.token = token;\n    this.user = user;\n    this._createLc(token, user);\n  };\n\n  //destroy session from memory \n  this.destroy = function () {\n    this.token = null;\n    this.user = null;\n    this._destroyLc();\n  };\n\n  //get token from memory or localStorage\n  this.getToken = function(){\n    var token = this.token;\n    if(!token){\n      token = angular.fromJson(window.localStorage.getItem('token'));  \n    } \n    return token;\n  };\n\n  //get user from memory or localStorage\n  this.getUser = function(){\n    var user = this.user;\n    if(!user){\n      user = angular.fromJson(window.localStorage.getItem('user'));  \n    } \n    return user;\n  };\n\n  this.isAuthenticated = function(){\n    return (this.getToken() != null); \n  }\n}]);\n\nangular.module('app.auth')\n.factory('AuthInterceptor', ['$rootScope', '$q', 'AUTH_EVENTS', 'Session', \n  function ($rootScope, $q, AUTH_EVENTS, Session) {\n    return {\n      // poner el token en cada request\n      request: function(config){\n        var token = Session.getToken();\n        if (token){\n          config.headers.Authorization = 'Token ' + token;\n        }\n        return config;\n      },\n      responseError: function (response) { \n        console.log(\"entro por interceptor de error\");\n        $rootScope.$broadcast({\n          401: AUTH_EVENTS.notAuthenticated,\n          403: AUTH_EVENTS.notAuthorized\n        }[response.status], response);\n        return $q.reject(response);\n      }\n    };\n}])\n\n\nangular.module('app.auth')\n\n.service('LoginService', ['$http', 'CONFIG', 'Session', function($http, CONFIG, Session){\n    var url = CONFIG.API_URL+'api-token-auth/';\n\n    this.handleError = function(res){\n      console.warn(res);\n    };\n\n    /*\n     *api token request\n     */\n    this.requestToken = function(data, callback, error){\n      return $http.post(url, data).then(callback, error);\n    };\n\n    /*\n     *login, create a session\n     */\n    this.login = function(token, callback){\n      var config = {\n        method : 'GET',\n        url    : CONFIG.API_URL+'users/me/',\n        headers: {\n          'Content-Type' : 'application/x-www-form-urlencoded; charset=utf-8',\n          'Authorization': 'Token ' + token \n        }\n      };\n\n      return $http(config).then(function(response){\n        Session.create(token, response.data);\n        callback(response) \n      }, this.handleError);\n    };\n}]);\n\n\nangular.module('app.auth')\n\n.controller('LoginCtrl', ['$scope', 'LoginService', '$location', \n  function($scope, LoginService, $location) {\n\n    $scope.user = {};\n    $scope.busy = false;\n\n    /* handle success login */\n    var successLogin = function(response){\n      //get user data, create a session and redirect to home\n      LoginService.login(response.data.token, function(response){\n        console.log(response);\n        $scope.setCurrentUser(response.data);\n        $scope.busy = false;\n        $location.path('/');\n      });\n    }\n\n    /* handle errors on login */\n    var errorLogin = function(response){\n      $scope.busy = false;\n      $scope.errors = response.data.non_field_errors;\n      console.log(response); \n    }\n\n    /* fired when the user click to \"Entrar\" */\n    $scope.login = function(){\n      console.log($scope.user); \n      $scope.busy = true;\n      LoginService.requestToken($scope.user, successLogin, errorLogin);\n    }\n\n}]);\n\n\n  angular.module('app', \n                 [\n                   'ngRoute',\n                   'templates',\n                   'angular-loading-bar', \n                   'xeditable',\n                   'app.auth',\n                   'app.home',\n                   'app.users'\n                 ]);\n\n\nangular.module('app')\n.run(['$rootScope', 'AUTH_EVENTS', 'Session', '$location', 'editableOptions', 'editableThemes', \n  function ($rootScope, AUTH_EVENTS, Session, $location, editableOptions, editableThemes) {\n    editableOptions.theme = 'bs3'; // bootstrap3 theme. Can be also 'bs2', 'default'\n    editableThemes['bs3'].submitTpl = '<button class=\"btn btn-flat btn-primary\" type=\"submit\">'+\n                                       '<i class=\"fa fa-check\"></i></button>';\n\n    editableThemes['bs3'].cancelTpl = '<button class=\"btn btn-flat btn-default\" ng-click=\"$form.$cancel()\">'+\n                                       '<i class=\"fa fa-times\"></i></button>';\n    function logout(){\n      Session.destroy();\n      $location.path('/login');\n    }\n\n    $rootScope.$on(AUTH_EVENTS.notAuthenticated, function(){\n      logout();\n      console.info('se activo interceptor not authenticated');\n    });\n\n    $rootScope.$on(AUTH_EVENTS.notAuthorized, function(){\n      logout();\n      console.info('se activo interceptor not authorized');\n    });\n\n    $rootScope.$on(AUTH_EVENTS.logout, function(){\n      logout();\n      console.info('se cerrara la sesion');\n    });\n\n    $rootScope.$on('$routeChangeStart', function (event, next) {\n      if ($location.path() !== '/login'){\n        if(!Session.isAuthenticated()){\n          logout(); \n        } \n      }\n    });\n\n    $rootScope.goTo = function(url){\n      $location.path(url); \n    };\n\n}]);\n\n\n/*\n * url routes\n */\n\n  angular.module('app') \n  .config(['$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {\n    'use strict';\n\n    $routeProvider\n    .when(\"/login\", {\n      controller: \"LoginCtrl\",\n      templateUrl: \"app/auth/login.html\"\n    })\n    .when(\"/\", {\n      controller: \"HomeCtrl\",\n      templateUrl: \"app/home/home.html\"\n    })\n    .when(\"/usuarios\", {\n      controller: \"UsersCtrl\",\n      templateUrl: \"app/users/users.html\"\n    })\n    .when(\"/usuarios/:id\", {\n      controller: \"UserDetailCtrl\",\n      templateUrl: \"app/users/users-detail.html\"\n    })\n    .when(\"/perfil\", {\n      controller: \"ProfileCtrl\",\n      templateUrl: \"app/users/profile.html\"\n    })\n    .otherwise({\n      redirectTo: '/'\n    });\n    $locationProvider.html5Mode(true);\n  }]);\n\n\n\n  angular.module(\"app\").constant(\"CONFIG\", {\n    ROOT_UR: \"http://localhost:8080/\",\n    API_URL: \"http://localhost:8000/api/v1/\"\n  }).constant(\"AUTH_EVENTS\", {\n    notAuthenticated: \"auth-not-authenticated\", \n    notAuthorized: \"auth-not-authorized\",\n    logout: \"auth-logout\"\n  });\n\n\n\nangular.module('app').config(['$httpProvider', function ($httpProvider) {\n    $httpProvider.interceptors.push(['$injector', function ($injector) {\n        return $injector.get('AuthInterceptor');\n      }\n    ]);\n  }]);\n"],"sourceRoot":"/source/"}