{"version":3,"sources":["bundle.js"],"names":["angular","module","service","this","token","user","_createLc","window","localStorage","setItem","toJson","_destroyLc","removeItem","create","destroy","getToken","fromJson","getItem","getUser","isAuthenticated","factory","$rootScope","$q","AUTH_EVENTS","Session","request","config","headers","Authorization","responseError","response","console","log","$broadcast","401","notAuthenticated","403","notAuthorized","status","reject","$http","CONFIG","url","API_URL","handleError","res","warn","requestToken","data","callback","error","post","then","login","method","Content-Type","controller","$scope","LoginService","$location","busy","successLogin","setCurrentUser","path","errorLogin","errors","non_field_errors","currentUser","getAll","get","id","getCurrentUser","UsersService","users","results","userDetail","$routeParams","info","noblock","expandedMenu","logout","toogleMenu","$","AdminLTE","pushMenu","expand","collapse","HomeService","run","editableOptions","editableThemes","theme","submitTpl","cancelTpl","$on","event","next","goTo","$routeProvider","$locationProvider","when","templateUrl","otherwise","redirectTo","html5Mode","constant","ROOT_UR","$httpProvider","interceptors","push","$injector"],"mappings":"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","file":"../app/bundle.min.js","sourcesContent":["'use strict';\n\nangular.module('app.auth', []).service('Session', [function () {\n\n  this.token = null;\n  this.user = null;\n\n  //create session from local storage\n  this._createLc = function (token, user) {\n    window.localStorage.setItem('token', angular.toJson(token));\n    window.localStorage.setItem('user', angular.toJson(user));\n  };\n\n  //destroy session from local storage \n  this._destroyLc = function () {\n    window.localStorage.removeItem('token');\n    window.localStorage.removeItem('user');\n  };\n\n  //create session from memory \n  this.create = function (token, user) {\n    this.token = token;\n    this.user = user;\n    this._createLc(token, user);\n  };\n\n  //destroy session from memory \n  this.destroy = function () {\n    this.token = null;\n    this.user = null;\n    this._destroyLc();\n  };\n\n  //get token from memory or localStorage\n  this.getToken = function () {\n    var token = this.token;\n    if (!token) {\n      token = angular.fromJson(window.localStorage.getItem('token'));\n    }\n    return token;\n  };\n\n  //get user from memory or localStorage\n  this.getUser = function () {\n    var user = this.user;\n    if (!user) {\n      user = angular.fromJson(window.localStorage.getItem('user'));\n    }\n    return user;\n  };\n\n  this.isAuthenticated = function () {\n    return this.getToken() != null;\n  };\n}]);\n'use strict';\n\nangular.module('app.auth').factory('AuthInterceptor', ['$rootScope', '$q', 'AUTH_EVENTS', 'Session', function ($rootScope, $q, AUTH_EVENTS, Session) {\n  return {\n    // poner el token en cada request\n    request: function request(config) {\n      var token = Session.getToken();\n      if (token) {\n        config.headers.Authorization = 'Bearer' + token;\n      }\n      return config;\n    },\n    responseError: function responseError(response) {\n      console.log(\"entro por interceptor de error\");\n      $rootScope.$broadcast({\n        401: AUTH_EVENTS.notAuthenticated,\n        403: AUTH_EVENTS.notAuthorized\n      }[response.status], response);\n      return $q.reject(response);\n    }\n  };\n}]);\n'use strict';\n\nangular.module('app.auth').service('LoginService', ['$http', 'CONFIG', 'Session', function ($http, CONFIG, Session) {\n  var url = CONFIG.API_URL + 'api-token-auth/';\n\n  this.handleError = function (res) {\n    console.warn(res);\n  };\n\n  /*\n   *api token request\n   */\n  this.requestToken = function (data, callback, error) {\n    return $http.post(url, data).then(callback, error);\n  };\n\n  /*\n   *login, create a session\n   */\n  this.login = function (token, callback) {\n    var config = {\n      method: 'GET',\n      url: CONFIG.API_URL + 'users/me/',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n        'Authorization': 'Bearer ' + token\n      }\n    };\n\n    return $http(config).then(function (response) {\n      Session.create(token, response.data);\n      callback(response);\n    }, this.handleError);\n  };\n}]);\n'use strict';\n\nangular.module('app.auth').controller('LoginCtrl', ['$scope', 'LoginService', '$location', function ($scope, LoginService, $location) {\n\n  $scope.user = {};\n  $scope.busy = false;\n\n  /* handle success login */\n  var successLogin = function successLogin(response) {\n    //get user data, create a session and redirect to home\n    LoginService.login(response.data.token, function (response) {\n      console.log(response);\n      $scope.setCurrentUser(response.data);\n      $scope.busy = false;\n      $location.path('/');\n    });\n  };\n\n  /* handle errors on login */\n  var errorLogin = function errorLogin(response) {\n    $scope.busy = false;\n    $scope.errors = response.data.non_field_errors;\n    console.log(response);\n  };\n\n  /* fired when the user click to \"Entrar\" */\n  $scope.login = function () {\n    console.log($scope.user);\n    $scope.busy = true;\n    LoginService.requestToken($scope.user, successLogin, errorLogin);\n  };\n}]);\n'use strict';\n\nangular.module('app.users', []).service('UsersService', ['$http', 'CONFIG', function ($http, CONFIG) {\n  this.url = CONFIG.API_URL + 'users/';\n  this.currentUser = null;\n\n  this.getAll = function (callback) {\n    return $http.get(this.url).then(callback);\n  };\n\n  this.getUser = function (id, callback) {\n    return $http.get(this.url + id + '/').then(callback);\n  };\n\n  this.setCurrentUser = function (user) {\n    this.currentUser = user;\n  };\n\n  this.getCurrentUser = function () {\n    return this.currentUser;\n  };\n}]);\n'use strict';\n\nangular.module('app.users').controller('UsersCtrl', ['$scope', 'UsersService', '$location', function ($scope, UsersService, $location) {\n\n  $scope.users = [];\n\n  UsersService.getAll(function (response) {\n    $scope.users = response.data.results;\n  });\n\n  $scope.userDetail = function (user) {\n    UsersService.setCurrentUser(user);\n    $location.path('/usuarios/' + user.id);\n  };\n}]);\n'use strict';\n\nangular.module('app.users').controller('UserDetailCtrl', ['$scope', 'UsersService', '$routeParams', function ($scope, UsersService, $routeParams) {\n\n  $scope.user = UsersService.getCurrentUser();\n\n  if (!$scope.user) {\n    UsersService.getUser($routeParams.id, function (response) {\n      $scope.user = response.data;\n    });\n  }\n}]);\n'use strict';\n\nangular.module('app.users').controller('ProfileCtrl', ['$scope', 'UsersService', function ($scope, UsersService) {\n\n  console.info(\"profile Ctrl works\");\n}]);\n'use strict';\n\nangular.module('app.home', []).service('HomeService', ['$http', 'CONFIG', function ($http, CONFIG) {\n  var url = CONFIG.API_URL + 'home/';\n\n  this.handleError = function (res) {\n    console.warn(res);\n  };\n\n  this.get = function (callback, error, noblock) {\n    return $http.get(url).then(callback, error);\n  };\n}]);\n'use strict';\n\nangular.module('app.home').controller('MainCtrl', ['$scope', '$rootScope', 'AUTH_EVENTS', 'Session', function ($scope, $rootScope, AUTH_EVENTS, Session) {\n  console.warn('main ctrl');\n\n  $scope.user = null;\n  $scope.expandedMenu = true;\n\n  $scope.setCurrentUser = function (user) {\n    $scope.user = user;\n  };\n\n  $scope.logout = function (user) {\n    $rootScope.$broadcast(AUTH_EVENTS.logout);\n  };\n\n  $scope.toogleMenu = function () {\n    $scope.expandedMenu = !$scope.expandedMenu;\n\n    if ($scope.expandedMenu) {\n      $.AdminLTE.pushMenu.expand();\n    } else {\n      $.AdminLTE.pushMenu.collapse();\n    }\n  };\n\n  //init\n  $scope.setCurrentUser(Session.getUser());\n}]);\n'use strict';\n\nangular.module('app.home').controller('HomeCtrl', ['$scope', 'HomeService', function ($scope, HomeService) {\n\n  console.info(\"home Ctrl works\");\n}]);\n'use strict';\n\nangular.module('app', ['ngRoute', 'templates', 'angular-loading-bar', 'xeditable', 'app.auth', 'app.home', 'app.users']);\n'use strict';\n\nangular.module('app').run(['$rootScope', 'AUTH_EVENTS', 'Session', '$location', 'editableOptions', 'editableThemes', function ($rootScope, AUTH_EVENTS, Session, $location, editableOptions, editableThemes) {\n  editableOptions.theme = 'bs3'; // bootstrap3 theme. Can be also 'bs2', 'default'\n  editableThemes['bs3'].submitTpl = '<button class=\"btn btn-flat btn-primary\" type=\"submit\">' + '<i class=\"fa fa-check\"></i></button>';\n\n  editableThemes['bs3'].cancelTpl = '<button class=\"btn btn-flat btn-default\" ng-click=\"$form.$cancel()\">' + '<i class=\"fa fa-times\"></i></button>';\n  function logout() {\n    Session.destroy();\n    $location.path('/login');\n  }\n\n  $rootScope.$on(AUTH_EVENTS.notAuthenticated, function () {\n    logout();\n    console.info('se activo interceptor not authenticated');\n  });\n\n  $rootScope.$on(AUTH_EVENTS.notAuthorized, function () {\n    logout();\n    console.info('se activo interceptor not authorized');\n  });\n\n  $rootScope.$on(AUTH_EVENTS.logout, function () {\n    logout();\n    console.info('se cerrara la sesion');\n  });\n\n  $rootScope.$on('$routeChangeStart', function (event, next) {\n    if ($location.path() !== '/login') {\n      if (!Session.isAuthenticated()) {\n        logout();\n      }\n    }\n  });\n\n  $rootScope.goTo = function (url) {\n    $location.path(url);\n  };\n}]);\n'use strict';\n\n/*\n * url routes\n */\n\nangular.module('app').config(['$routeProvider', '$locationProvider', function ($routeProvider, $locationProvider) {\n  'use strict';\n\n  $routeProvider.when(\"/login\", {\n    controller: \"LoginCtrl\",\n    templateUrl: \"app/auth/login.html\"\n  }).when(\"/\", {\n    controller: \"HomeCtrl\",\n    templateUrl: \"app/home/home.html\"\n  }).when(\"/usuarios\", {\n    controller: \"UsersCtrl\",\n    templateUrl: \"app/users/users.html\"\n  }).when(\"/usuarios/:id\", {\n    controller: \"UserDetailCtrl\",\n    templateUrl: \"app/users/users-detail.html\"\n  }).when(\"/perfil\", {\n    controller: \"ProfileCtrl\",\n    templateUrl: \"app/users/profile.html\"\n  }).otherwise({\n    redirectTo: '/'\n  });\n  $locationProvider.html5Mode(true);\n}]);\n\"use strict\";\n\nangular.module(\"app\").constant(\"CONFIG\", {\n  ROOT_UR: \"http://localhost:8080/\",\n  API_URL: \"http://localhost:8000/api/v1/\"\n}).constant(\"AUTH_EVENTS\", {\n  notAuthenticated: \"auth-not-authenticated\",\n  notAuthorized: \"auth-not-authorized\",\n  logout: \"auth-logout\"\n});\n'use strict';\n\nangular.module('app').config(['$httpProvider', function ($httpProvider) {\n    $httpProvider.interceptors.push(['$injector', function ($injector) {\n        return $injector.get('AuthInterceptor');\n    }]);\n}]);"]}