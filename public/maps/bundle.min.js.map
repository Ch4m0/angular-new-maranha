{"version":3,"sources":["bundle.js"],"names":["angular","module","service","$http","CONFIG","this","url","API_URL","currentUser","getAll","callback","get","then","getUser","id","setCurrentUser","user","getCurrentUser","controller","$scope","UsersService","$location","users","response","data","results","userDetail","path","$routeParams","console","info","handleError","res","warn","error","noblock","$rootScope","AUTH_EVENTS","Session","expandedMenu","logout","$broadcast","toogleMenu","$","AdminLTE","pushMenu","expand","collapse","token","_createLc","window","localStorage","setItem","toJson","_destroyLc","removeItem","create","destroy","getToken","fromJson","getItem","isAuthenticated","factory","$q","request","config","headers","Authorization","responseError","log",401,"notAuthenticated",403,"notAuthorized","status","reject","requestToken","post","login","method","Content-Type","LoginService","busy","successLogin","errorLogin","errors","non_field_errors","HomeService","run","editableOptions","editableThemes","theme","submitTpl","cancelTpl","$on","event","next","goTo","$routeProvider","$locationProvider","when","templateUrl","otherwise","redirectTo","html5Mode","constant","ROOT_UR","$httpProvider","interceptors","push","$injector"],"mappings":"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","file":"bundle.min.js","sourcesContent":["'use strict';\n\nangular.module('app.users', []).service('UsersService', ['$http', 'CONFIG', function ($http, CONFIG) {\n  this.url = CONFIG.API_URL + 'users/';\n  this.currentUser = null;\n\n  this.getAll = function (callback) {\n    return $http.get(this.url).then(callback);\n  };\n\n  this.getUser = function (id, callback) {\n    return $http.get(this.url + id + '/').then(callback);\n  };\n\n  this.setCurrentUser = function (user) {\n    this.currentUser = user;\n  };\n\n  this.getCurrentUser = function () {\n    return this.currentUser;\n  };\n}]);\n'use strict';\n\nangular.module('app.users').controller('UsersCtrl', ['$scope', 'UsersService', '$location', function ($scope, UsersService, $location) {\n\n  $scope.users = [];\n\n  UsersService.getAll(function (response) {\n    $scope.users = response.data.results;\n  });\n\n  $scope.userDetail = function (user) {\n    UsersService.setCurrentUser(user);\n    $location.path('/usuarios/' + user.id);\n  };\n}]);\n'use strict';\n\nangular.module('app.users').controller('UserDetailCtrl', ['$scope', 'UsersService', '$routeParams', function ($scope, UsersService, $routeParams) {\n\n  $scope.user = UsersService.getCurrentUser();\n\n  if (!$scope.user) {\n    UsersService.getUser($routeParams.id, function (response) {\n      $scope.user = response.data;\n    });\n  }\n}]);\n'use strict';\n\nangular.module('app.users').controller('ProfileCtrl', ['$scope', 'UsersService', function ($scope, UsersService) {\n\n  console.info(\"profile Ctrl works\");\n}]);\n'use strict';\n\nangular.module('app.home', []).service('HomeService', ['$http', 'CONFIG', function ($http, CONFIG) {\n  var url = CONFIG.API_URL + 'home/';\n\n  this.handleError = function (res) {\n    console.warn(res);\n  };\n\n  this.get = function (callback, error, noblock) {\n    return $http.get(url).then(callback, error);\n  };\n}]);\n'use strict';\n\nangular.module('app.home').controller('MainCtrl', ['$scope', '$rootScope', 'AUTH_EVENTS', 'Session', function ($scope, $rootScope, AUTH_EVENTS, Session) {\n  console.warn('main ctrl');\n\n  $scope.user = null;\n  $scope.expandedMenu = true;\n\n  $scope.setCurrentUser = function (user) {\n    $scope.user = user;\n  };\n\n  $scope.logout = function (user) {\n    $rootScope.$broadcast(AUTH_EVENTS.logout);\n  };\n\n  $scope.toogleMenu = function () {\n    $scope.expandedMenu = !$scope.expandedMenu;\n\n    if ($scope.expandedMenu) {\n      $.AdminLTE.pushMenu.expand();\n    } else {\n      $.AdminLTE.pushMenu.collapse();\n    }\n  };\n\n  //init\n  $scope.setCurrentUser(Session.getUser());\n}]);\n'use strict';\n\nangular.module('app.auth', []).service('Session', [function () {\n\n  this.token = null;\n  this.user = null;\n\n  //create session from local storage\n  this._createLc = function (token, user) {\n    window.localStorage.setItem('token', angular.toJson(token));\n    window.localStorage.setItem('user', angular.toJson(user));\n  };\n\n  //destroy session from local storage\n  this._destroyLc = function () {\n    window.localStorage.removeItem('token');\n    window.localStorage.removeItem('user');\n  };\n\n  //create session from memory\n  this.create = function (token, user) {\n    this.token = token;\n    this.user = user;\n    this._createLc(token, user);\n  };\n\n  //destroy session from memory\n  this.destroy = function () {\n    this.token = null;\n    this.user = null;\n    this._destroyLc();\n  };\n\n  //get token from memory or localStorage\n  this.getToken = function () {\n    var token = this.token;\n    if (!token) {\n      token = angular.fromJson(window.localStorage.getItem('token'));\n    }\n    return token;\n  };\n\n  //get user from memory or localStorage\n  this.getUser = function () {\n    var user = this.user;\n    if (!user) {\n      user = angular.fromJson(window.localStorage.getItem('user'));\n    }\n    return user;\n  };\n\n  this.isAuthenticated = function () {\n    return this.getToken() != null;\n  };\n}]);\n'use strict';\n\nangular.module('app.auth').factory('AuthInterceptor', ['$rootScope', '$q', 'AUTH_EVENTS', 'Session', function ($rootScope, $q, AUTH_EVENTS, Session) {\n  return {\n    // poner el token en cada request\n    request: function request(config) {\n      var token = Session.getToken();\n      if (token) {\n        config.headers.Authorization = 'Token ' + token;\n      }\n      return config;\n    },\n    responseError: function responseError(response) {\n      console.log(\"entro por interceptor de error\");\n      $rootScope.$broadcast({\n        401: AUTH_EVENTS.notAuthenticated,\n        403: AUTH_EVENTS.notAuthorized\n      }[response.status], response);\n      return $q.reject(response);\n    }\n  };\n}]);\n'use strict';\n\nangular.module('app.auth').service('LoginService', ['$http', 'CONFIG', 'Session', function ($http, CONFIG, Session) {\n  var url = CONFIG.API_URL + 'api-token-auth/';\n\n  this.handleError = function (res) {\n    console.warn(res);\n  };\n\n  /*\n   *api token request\n   */\n  this.requestToken = function (data, callback, error) {\n    return $http.post(url, data).then(callback, error);\n  };\n\n  /*\n   *login, create a session\n   */\n  this.login = function (token, callback) {\n    var config = {\n      method: 'GET',\n      url: CONFIG.API_URL + 'users/me/',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n        'Authorization': 'Token ' + token\n      }\n    };\n\n    return $http(config).then(function (response) {\n      Session.create(token, response.data);\n      callback(response);\n    }, this.handleError);\n  };\n}]);\n'use strict';\n\nangular.module('app.auth').controller('LoginCtrl', ['$scope', 'LoginService', '$location', function ($scope, LoginService, $location) {\n\n  $scope.user = {};\n  $scope.busy = false;\n\n  /* handle success login */\n  var successLogin = function successLogin(response) {\n    //get user data, create a session and redirect to home\n    LoginService.login(response.data.token, function (response) {\n      console.log(response);\n      $scope.setCurrentUser(response.data);\n      $scope.busy = false;\n      $location.path('/');\n    });\n  };\n\n  /* handle errors on login */\n  var errorLogin = function errorLogin(response) {\n    $scope.busy = false;\n    $scope.errors = response.data.non_field_errors;\n    console.log(response);\n  };\n\n  /* fired when the user click to \"Entrar\" */\n  $scope.login = function () {\n    console.log($scope.user);\n    $scope.busy = true;\n    LoginService.requestToken($scope.user, successLogin, errorLogin);\n  };\n}]);\n'use strict';\n\nangular.module('app.home').controller('HomeCtrl', ['$scope', 'HomeService', function ($scope, HomeService) {\n\n  console.info(\"home Ctrl works\");\n}]);\n'use strict';\n\nangular.module('app', ['ngRoute', 'templates', 'angular-loading-bar', 'xeditable', 'app.auth', 'app.home', 'app.users']);\n'use strict';\n\nangular.module('app').run(['$rootScope', 'AUTH_EVENTS', 'Session', '$location', 'editableOptions', 'editableThemes', function ($rootScope, AUTH_EVENTS, Session, $location, editableOptions, editableThemes) {\n  editableOptions.theme = 'bs3'; // bootstrap3 theme. Can be also 'bs2', 'default'\n  editableThemes['bs3'].submitTpl = '<button class=\"btn btn-flat btn-primary\" type=\"submit\">' + '<i class=\"fa fa-check\"></i></button>';\n\n  editableThemes['bs3'].cancelTpl = '<button class=\"btn btn-flat btn-default\" ng-click=\"$form.$cancel()\">' + '<i class=\"fa fa-times\"></i></button>';\n  function logout() {\n    Session.destroy();\n    $location.path('/login');\n  }\n\n  $rootScope.$on(AUTH_EVENTS.notAuthenticated, function () {\n    logout();\n    console.info('se activo interceptor not authenticated');\n  });\n\n  $rootScope.$on(AUTH_EVENTS.notAuthorized, function () {\n    logout();\n    console.info('se activo interceptor not authorized');\n  });\n\n  $rootScope.$on(AUTH_EVENTS.logout, function () {\n    logout();\n    console.info('se cerrara la sesion');\n  });\n\n  $rootScope.$on('$routeChangeStart', function (event, next) {\n    if ($location.path() !== '/login') {\n      if (!Session.isAuthenticated()) {\n        logout();\n      }\n    }\n  });\n\n  $rootScope.goTo = function (url) {\n    $location.path(url);\n  };\n}]);\n'use strict';\n\n/*\n * url routes\n */\n\nangular.module('app').config(['$routeProvider', '$locationProvider', function ($routeProvider, $locationProvider) {\n  'use strict';\n\n  $routeProvider.when(\"/login\", {\n    controller: \"LoginCtrl\",\n    templateUrl: \"app/auth/login.html\"\n  }).when(\"/\", {\n    controller: \"HomeCtrl\",\n    templateUrl: \"app/home/home.html\"\n  }).when(\"/usuarios\", {\n    controller: \"UsersCtrl\",\n    templateUrl: \"app/users/users.html\"\n  }).when(\"/usuarios/:id\", {\n    controller: \"UserDetailCtrl\",\n    templateUrl: \"app/users/users-detail.html\"\n  }).when(\"/perfil\", {\n    controller: \"ProfileCtrl\",\n    templateUrl: \"app/users/profile.html\"\n  }).otherwise({\n    redirectTo: '/'\n  });\n  $locationProvider.html5Mode(true);\n}]);\n\"use strict\";\n\nangular.module(\"app\").constant(\"CONFIG\", {\n  ROOT_UR: \"http://localhost:8080/\",\n  API_URL: \"http://localhost:8000/api/v1/\"\n}).constant(\"AUTH_EVENTS\", {\n  notAuthenticated: \"auth-not-authenticated\",\n  notAuthorized: \"auth-not-authorized\",\n  logout: \"auth-logout\"\n});\n'use strict';\n\nangular.module('app').config(['$httpProvider', function ($httpProvider) {\n    $httpProvider.interceptors.push(['$injector', function ($injector) {\n        return $injector.get('AuthInterceptor');\n    }]);\n}]);"],"sourceRoot":"/source/"}